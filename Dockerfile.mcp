# Build assets once, then run the Node MCP server

# 1) Builder: compila assets con pnpm
FROM node:20-alpine AS builder
WORKDIR /app
RUN corepack enable

# Archivos base del monorepo para que pnpm resuelva workspaces
COPY pnpm-workspace.yaml pnpm-lock.yaml package.json ./
COPY tsconfig*.json vite*.mts tailwind.config.ts build-all.mts dev-all.mts ./
COPY src ./src

RUN pnpm install --frozen-lockfile
RUN pnpm run build

# 2) Runtime: servidor MCP en Node
FROM node:20-alpine
WORKDIR /app
ENV NODE_ENV=production
RUN corepack enable \
  && npm i -g tsx@4.19.2 typescript@5.6.3

# Copiamos archivos de workspace + paquete del server para que pnpm resuelva deps
COPY pnpm-workspace.yaml pnpm-lock.yaml package.json ./
# Copia el paquete completo (incluye src/)
COPY pizzaz_server_node/ /app/pizzaz_server_node/

# Instala solo lo necesario para el paquete del server (sin frozen-lockfile para evitar fallo en CI)
RUN pnpm install --no-frozen-lockfile --filter "pizzaz-mcp-node"

# Copia los assets ya construidos
COPY --from=builder /app/assets /app/assets

WORKDIR /app/pizzaz_server_node
ENV PORT=8000
EXPOSE 8000

# Usa el script start del paquete (que invoca tsx)
CMD ["pnpm","start"]
